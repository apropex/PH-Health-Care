model Appointment {
  id             String            @id @default(uuid())
  videoCallingId String
  status         AppointmentStatus @default(SCHEDULE)
  paymentStatus  PaymentStatus     @default(UNPAID)

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  scheduleId String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  payment      Payment?
  prescription Prescription?
  reviews      Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("appointments")
}

model Payment {
  id                 String        @id @default(uuid())
  amount             Float
  transactionId      String        @unique
  status             PaymentStatus @default(UNPAID)
  paymentGatewayData Json?

  appointmentId String      @unique
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("payments")
}

model Prescription {
  id           String   @id @default(uuid())
  instruction  String
  followUpdate DateTime

  appointmentId String      @unique
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("prescription")
}

model Review {
  id      String  @id @default(uuid())
  rating  Float
  comment String?

  patientId String
  patient   Patient @relation(fields: [patientId], references: [id])

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  appointmentId String      @unique
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}
